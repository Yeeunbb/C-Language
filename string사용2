#include <iostream>
#include <string>

using namespace std;

void print_menu();
void QuitProgram();
void substr1(string str1);
void substr2(string str2);
void Find_index(string str, int n);
int integerInputAnnounce();
int Input_integer();
string stringInputAnnounce();
string Input_string();
string Concatenate_stringstring(string s1, string s2);
string Concatenate_str_withnew(string str, int n);

//메뉴에따라 기능을 수행하는 프로그램.
int main()
{
	string s1 = "", s2 = ""; //빈 문자열 s1, s2
	int i; //입력받는 메뉴의 정수값을 저장할 변수

	print_menu(); //프로그램 시작 시 처음으로 메뉴출력
	i = integerInputAnnounce(); //메뉴번호에 따른 기능을 수행하기 위해 i에 정수값 저장

	while (i>0)
	{ //반복문을 통하여 프로그램 종료메뉴 번호인 -1값을 입력받기 전까지 반복수행할 수 있도록 함
		if (i==1) //메뉴1번실행. 빈문자열이었던 s1에 문자열을 입력받음
			s1 = stringInputAnnounce();

		else if (i==2) //메뉴2번실행. 빈문자열이었던  s2에 문자열을 입력받음
			s2 = stringInputAnnounce();

		else if(i==3) //메뉴3번실행. s1과 s2를 연결한 문자열을 s1에 새롭게 저장
			s1 = Concatenate_stringstring(s1,s2);

		else if(i==4) //메뉴4번실행. s1문자열에 새로운 문자열 또는 문자를 연결하여 저장
			s1 = Concatenate_str_withnew(s1, 1);

		else if(i==5) //메뉴5번실행. s2문자열에 새로운 문자열 또는 문자를 연결하여 저장
			s2 = Concatenate_str_withnew(s2, 2);

		else if(i==6) //메뉴6번실행. 새로 입력 받은 문자 또는 문자열이 s1문자열에서 처음 나타나는 위치 출력
			Find_index(s1, 1);

		else if(i==7) //메뉴7번실행. 새로 입력 받은 문자 또는 문자열이 s2문자열에서 처음 나타나는 위치 출력
			Find_index(s2, 2);

		else if(i==8) //메뉴8번실행. s1문자열에서 x인덱스부터 y인덱스까지의 문자열을 출력
			substr1(s1);

		else if(i==9) //메뉴9번실행. s2문자열에서 x인덱스부터 y인덱스까지의 문자열을 출력
			substr2(s2);

		print_menu(); //입력받은 메뉴의 기능을 수행 후 메뉴를 다시한번 출력
		i = integerInputAnnounce(); //새로운 메뉴를 입력받아 다시 수행
	}

	QuitProgram(); // i=-1을 입력할 시 반복문을 종료하게 되면서 프로그램 종료

return 0;
}

void print_menu()
{ //전체 메뉴를 출력하는 함수
	cout << endl;
	cout << "==============================================================================================" << endl;
	cout << "1. Enter new 1st string." << endl;
	cout << "2. Enter new 2st string." << endl;
	cout << "3. Concatenate 1st string and 2nd string." << endl;
	cout << "4. Concatenate 1st string and new entered character or new entered string." << endl;
	cout << "5. Concatenate 2nd string and new entered character or new entered string." << endl;
	cout << "6. Find first occurrence index of new entered character or new entered string in 1st string." << endl;
	cout << "7. Find first occurrence index of new entered character or new entered string in 2nd string." << endl;
	cout << "8. Print Substring (x,y) in 1st string." << endl;
	cout << "9. Print Substring (x,y) in 2nd string." << endl;
	cout << "-1. Quit the program" << endl;
	cout << "==============================================================================================" << endl;
	cout << endl;

}

int integerInputAnnounce()
{ //메뉴번호를 입력하라고 알리는 함수
	cout << "Please enter integer: ";
	return Input_integer();
}

string stringInputAnnounce()
{ //메뉴1번과 2번에서 사용될 문자열을 입력하라고 알리는 함수
	cout << "Please enter string: ";
	return Input_string();
}
int Input_integer()
{ //입력받은 정수값을 출력해주는 함수
	int x;
	cin >> x;
	return x;
}
string Input_string()
{ //입력받은 문자열을 출력해주는 함수
	string str;
	cin >> str;
	return str;
}

string Concatenate_stringstring(string s1, string s2)
{ //문자열s1 과 s2를 연결해주는 함수
	if(s1.empty()||s2.empty()) //문자열s1 또는 s2가 빈문자열일 경우 에러문장 출력
		cout << "Error: You must be enter string s1 and s2 before executing this function!!" << endl;
	else
		cout << "Concatenate s1 and s2 is " << s1+s2 << endl;
	return s1 + s2;
}

void QuitProgram()
{ //프로그램 종료를 알리는 문장을 출력하는 함수
	cout << endl;
	cout << "Quit the Program";
}

string Concatenate_str_withnew(string str, int n)
{ //문자열과 새로운 문자열 또는 새로운 문자를 연결해주는 함수. s1또는s2인지 출력해주기 위해 int n으로 숫자를 입력받음
	if(str.empty()) //입력받은 문자열(s1혹은s2)이 빈문자열일 경우 에러문장 출력
		cout << "Error: You must be enter string s"<<n<<" before executing this function!!" << endl;
	else
	{
		int i;

		cout << "1. Enter Character." << endl;
		cout << "2. Enter String." << endl;
		cout << "Please enter integer: ";
		cin >> i;

		if (i==1)
		{
			char c;
			cout << "Please enter character: ";
			cin >> c;
			cout << endl;
			cout << "Concatenate s" << n << " and new string is " << str + c << endl;
			return str + c;
		}
		else
		{
			string nstr;
			cout << "Please enter string: ";
			cin >> nstr;
			cout << endl;
			cout << "Concatenate s" << n << " and new string is " << str  + nstr << endl;
			return str + nstr;
		}
	}
}

void Find_index(string str, int n)
{ //새로 입력 받은 문자 혹은 새로 입력 받은 문자열이 s1혹은 s2문자열에서 처음 나타나는 위치를 출력하는 함수
	if(str.empty()) //문자열(s1혹은 s2)이 빈문자열일 경우 에러문장 출력
		cout << "Error: You must be enter string s"<<n<<" before executing this function!!" << endl;
	else
	{
		int i;

		cout << "1. Enter Character." << endl;
		cout << "2. Enter String." << endl;
		cout << "Please enter integer: ";
		cin >> i;

		if (i==1)
		{
			char n;
			cout << "Please enter Character: ";
			cin >> n;
			cout << endl;
			cout << "Index of input is " << str.find(n) << endl;
		}
		else
		{
			string nstr;
			cout << "Please enter string: ";
			cin >> nstr;
			cout << endl;
			cout << "Index of input is " << str.find(nstr) << endl;
		}
	}
}

void substr1(string str)
{ //s1문자열의 x인덱스부터 y인덱스까지의 문자열을 출력하는 함수
	if(str.empty()) //s1문자열이 빈문자열일 경우 에러문장을 출력
		cout << "Error: You must be enter string s1 before executing this function!!" << endl;
	else
	{
		int x, y;

		cout << "Enter x." << endl;
		cout << "Please enter integer: ";
		cin >> x;
		cout << "Enter y." << endl;
		cout << "Please enter integer: ";
		cin >> y;
		cout << endl;

		if(x>(str.length())) //x인덱스가 s1문자열 길이보다 크다면 에러문장을 출력
			cout << "Start index x is out of index!!!" << endl;
		else //x인덱스부터 y인덱스까지의 문자열을 출력해주기 위해 str.substr의 범위를 str.substr(x, y-x+1)로 함.
			cout << "1st string's substr (x, y) is " << str.substr(x, y-x+1) << endl;
	}
}

void substr2(string str)
{ //s2문자열의 x인덱스부터 y인덱스까지의 문자열을 출력하는 함수
	if(str.empty()) //s2문자열이 빈문자열일 경우 에러문장을 출력
		cout << "Error: You must be enter string s2 before executing this function!!" << endl;
	else
	{
		int x, y;

		cout << "Enter x." << endl;
		cout << "Please enter integer: ";
		cin >> x;
		cout << "Enter y." << endl;
		cout << "Please enter integer: ";
		cin >> y;
		cout << endl;

		if(x>(str.length())) //x인덱스가 s2문자열 길이보다 크다면 에러문장을 출력
			cout << "Start index x is out of index!!!" << endl;
		else //str.substr(x,y)를 할 경우 x인덱스부터 y개수만큼의 문자열이 출력 되므로 범위를 다시 (x, y-x+1)로 설정
			cout << "2nd string's substr (x, y) is " << str.substr(x, y-x+1) << endl;
	}
}
